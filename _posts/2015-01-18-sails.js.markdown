---
layout:     post
title:      "Implement Passport.js authentication with Sails.js ~0.10"
subtitle:   "Passport.js and sails.js"
date:       2015-01-17 14:00:44
author:     "Lucas Gatsas"
header-img: "img/lucas-gatsas-15.jpg"
---
<h2 class="section-heading">sailsjs, passportjs, nodejss</h2>

Step 1: dependencies
Add these dependencies to the yourproject/package.json file:



<pre class=" language-javascript"><code class=" language-javascript"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token string">"dependencies"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token string">"bcrypt"</span><span class="token punctuation">:</span> <span class="token string">"~0.8.0"</span><span class="token punctuation">,</span>
    <span class="token string">"passport"</span><span class="token punctuation">:</span> <span class="token string">"~0.2.1"</span><span class="token punctuation">,</span>
    <span class="token string">"passport-local"</span><span class="token punctuation">:</span> <span class="token string">"~1.0.0"</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
</code>
</pre>
Open the terminal, go to your project folder and run:

[sudo] npm install



Step 2: create user model
To create a user model run the following command:

sails generate api user

This will automatically create a model and a controller. You can find the model at yourproject/api/models/User.js. Let's make that file look like this:



<pre class=" language-javascript"><code class=" language-javascript"><span class="token keyword">var</span> bcrypt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'bcrypt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    attributes<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        email<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            type<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>
            required<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
            unique<span class="token punctuation">:</span> <span class="token keyword">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        password<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            type<span class="token punctuation">:</span> <span class="token string">'string'</span><span class="token punctuation">,</span>
            minLength<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
            required<span class="token punctuation">:</span> <span class="token keyword">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        toJSON<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>password<span class="token punctuation">;</span>
            <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    beforeCreate<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bcrypt<span class="token punctuation">.</span><span class="token function">genSalt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> salt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            bcrypt<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>password<span class="token punctuation">,</span> salt<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">cb</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    user<span class="token punctuation">.</span>password <span class="token operator">=</span> hash<span class="token punctuation">;</span>
                    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code>
</pre>


<!--

<a href="#">
    <img src="{{ site.baseurl }}/img/static.squarespace.jpg" alt="Post Sample Image">
</a>
-->


<!--
<a href="#">
    <img src="{{ site.baseurl }}/img/gitlist.io.png" alt="Post Sample Image">
</a> -->
<!--

<a href="#">
    <img src="{{ site.baseurl }}/img/design.png" alt="Post Sample Image">
</a> 


-->




<blockquote>When in doubt, use brute force.

        â€” Ken Thompson

</blockquote>


<!-- 
<a href="#">
    <img src="{{ site.baseurl }}/img/jekyllthemewhite.png" alt="Post Sample Image">
</a> 



 -->



